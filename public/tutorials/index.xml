<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on Material Docs</title>
    <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/</link>
    <description>Recent content in Tutorials on Material Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/auto-deploy-middleman-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/auto-deploy-middleman-project/</guid>
      <description>This tutorial helps you create a basic static website project (e.g. a Blog) with Middleman, connect and deploy it with Bitrise.
1. Create and clone a repository on Github To create a new repository on Github, click here. You need to sign in with your Github account, or sign up if you don&amp;rsquo;t have one yet. Once you created your repository, clone it.
2. Install Middleman Middleman is distributed using the RubyGems package manager.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/build-with-fake/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/build-with-fake/</guid>
      <description>To add support for your FAKE build scripts, open your app&amp;rsquo;s Workflow Editor on bitrise.io and add a Script step to your workflow.
Below you can find an example script content to perform a build with FAKE, make sure you fill out the parameters at the top of the script!
#!/bin/bash set -ex # Fill out these parameters: # You should use the same directory that you set in your build script for the FAKE dll output_directory=tools fake_build_script=build.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/community-created/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/community-created/</guid>
      <description>If you write a tutorial or blog post about Bitrise feel free to add it to this list yourself or contact us and we&amp;rsquo;ll add it for you!
English Getting Started  How to implement mobile continuous integration(CI) and delivery(CD) using bitrise.io  iOS  Let&amp;rsquo;s automate Swift builds with Bitrise The Road to Bitrise - switching from Jenkins Bitrise and Carthage - a simple guide about how to use Carthage on Bitrise  Android  Seamless Android Builds With Bitrise.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/deploy/bitrise-app-deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/deploy/bitrise-app-deployment/</guid>
      <description>Bitrise has an integrated App Deployment system you can use for App and other build artifact file distribution.
With this you can distribute your iOS and Android app, over the air, for your testers (even for those who don&amp;rsquo;t have a Bitrise account) or you can just use it for archiving your App and other build artifact files (these files will be available on the related Build&amp;rsquo;s details page).</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/deploy/deploy-to-testfairy-with-bitrise/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/deploy/deploy-to-testfairy-with-bitrise/</guid>
      <description>If you are looking for a deployment service that also gives you lots of insights about your application, then TestFairy is a great service to check out.
What is TestFairy? When testing apps in the crowd, you never know what exactly was tested and what exactly went wrong on the client side. TestFairy solves this problem by providing a video of everything that happened on the mobile device, including detailed internal metrics such as CPU, memory, GPS, network, logs, crash reports, and a lot more.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/deploy/publish-your-app-to-appaloosa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/deploy/publish-your-app-to-appaloosa/</guid>
      <description>Would you like to beta test and deploy your app to 1 or thousands of users? Appaloosa helps you distribute your mobile apps privately, collect feedback and analyse your deployment&amp;rsquo;s efficiency. Check it out!
What is Appaloosa? Appaloosa is a simple and secure enterprise App Store. They help mobile &amp;amp; digital teams build, test and deploy their apps privately.
You can manage your apps on Android, iOS and Windows Phone, all in the same place.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/download-or-replace-project-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/download-or-replace-project-resources/</guid>
      <description>You can do this in quite a few ways, these are probably the easiest ones:
 use the ZIP resource archive downloader step for downloading and extracting a ZIP file use the File Downloader step to download a single file use a Script Step  !!! note &amp;ldquo;Store the resources file on bitrise.io&amp;ldquo; You can store the resources file on bitrise.io. In the Workflow Editor select the &amp;ldquo;Code signing &amp;amp; Files&amp;rdquo; section, and upload the archive file in the &amp;ldquo;Generic File Storage&amp;rdquo; section.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/efficient-continuous-integration-and-deployment-workflow-for-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/efficient-continuous-integration-and-deployment-workflow-for-ios/</guid>
      <description>An efficient CI/CD Workflow for iOS development To achieve an efficient workflow for rapid iOS app development you have to specify the automation scenarios and the triggers to start specific scenarios.
Additionally you most likely want to minimize the number of tools, configurations and manual steps required to achieve your automated development workflow.
To make the whole process as easy as possible (and still flexible enough to support a broad range of tasks you might want to perform as part of your automation) was one of the fundamental principles when we started Bitrise.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/hipchat-message/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/hipchat-message/</guid>
      <description>You can send HipChat messages during your build.
You can, for example, send a HipChat message with the Build&amp;rsquo;s bitrise.io URL, the build&amp;rsquo;s status (at the point where you include the HipChat step - usually it&amp;rsquo;s best to make it the very last step of the Workflow) and with the Public Install Page for the app.
To do this all you have to do is:
 add a Send HipChat message step to your app&amp;rsquo;s Workflow, after the Deploy to Bitrise.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/how-to-use-the-generic-file-storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/how-to-use-the-generic-file-storage/</guid>
      <description>How to upload files to bitrise&amp;rsquo;s Generic File Storage?  Open your app on bitrise.io Go to Workflow tab, to open the Workflow Editor On the left side of Workflow Editor select Code signing &amp;amp; Files Scroll down to Generic File Storage section and click on + Add another File Enter your uniqe id and select your file you want to upload  !!! note Bitrise will upload your file and assign an environment variable (BITRISEIO_[the ID you specify]_URL) to the file&amp;rsquo;s download url.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/vpn-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://demo.devcenter.bitrise.io.s3-website-us-east-1.amazonaws.com/tutorials/vpn-configuration/</guid>
      <description>Do you require a VPN connection for your build, to be able to connect to your server, either to git clone your repository or to access a private API? If yes, then this tutorial is for you!
Technical infos Connecting to a VPN, in short, works like this:
 the build starts you install &amp;amp; configure the VPN components you need you start the VPN you proceed with the build  Obviously, if you require a VPN connection in order to access your code repository, you have to connect to the VPN before the Git Clone step, but in general you can configure &amp;amp; connect to the VPN anywhere in your Workflow, before you&amp;rsquo;d use the connection.</description>
    </item>
    
  </channel>
</rss>